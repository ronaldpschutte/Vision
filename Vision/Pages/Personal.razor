@page "/personal"
@using System.Linq
@using Newtonsoft.Json
@using Vision.Models

<PageTitle>Personal</PageTitle>

<div class="contentWrapper" id="page" style="width:100%;">

    <ErrorBoundary>
    <ErrorContent Context="ex">
        @{
            OnError(@ex);
        } 
        <p>@ex.Message</p> 
    </ErrorContent>
    </ErrorBoundary>

    @* filter by first, second, queue, team
    <div class=content style="box-sizing: border-box;">*@
        <MudButton OnClick="() => StateHasChanged()">Refresh</MudButton>
    <br />
    <ErrorBoundary>
    <ChildContent>
    <MudDropContainer 
        @ref="_mudDropContainer" 
        T="Vision.Models.WorkflowStep" 
        Items="@CurrectSprintSteps"  
        ItemsSelector="@((item,dropzone) => item.AutotaskStatus.ScrumStatus.ScrumStatusId+"_"+item.CompanyId+"_"+(item.ProjectId??0) == dropzone)" 
        ItemDropped="ItemUpdated"
        ItemIsDisabled="@( (item) => IsCardInEditMode(item.WorkflowStepId))" 
        Class="d-flex flex-column"
        DisabledClass="mud-list-item-disabled"  >
        <ChildContent>
            <MudExpansionPanels MultiExpansion="true">
                @foreach (var company in Companies)
                {
                    if (!FullyExpanded.ContainsKey(company.CompanyId))
                    {
                        FullyExpanded.Add(company.CompanyId, false);
                    }
                    if (!FullyExpandedType.ContainsKey(company.CompanyId + "-Tickets"))
                    {
                        var count = CurrectSprintSteps.Where(x=>x.CompanyId == company.CompanyId && x.StepType == 1).Count();
                        FullyExpandedType.Add(company.CompanyId + "-Tickets", count>0);
                    }
                    <MudExpansionPanel IsInitiallyExpanded="true" >
                        <TitleContent>
                            <div class="d-flex" style="display: flex; flex-flow: row; justify-content: space-between ; width:100%">
                                <MudText><b>@company.CompanyName </b> (@(CurrectSprintSteps.Where(x=>x.CompanyId == company.CompanyId).Count()))</MudText>
                                <MudToggleIconButton Toggled="@FullyExpanded[company.CompanyId]" ToggledChanged="@(() => FullyExpanded[company.CompanyId]=!FullyExpanded[company.CompanyId])"
                                                 Icon="@Icons.Material.Filled.Fullscreen" Title="Off"
                                                 ToggledIcon="@Icons.Material.Filled.FullscreenExit" ToggledTitle="On" />
                            </div>
                        </TitleContent>
                        @* content van company *@
                        <ChildContent>
                            <MudExpansionPanels MultiExpansion="true">
                                <MudExpansionPanel IsInitiallyExpanded="@(FullyExpandedType[company.CompanyId + "-Tickets"])">
                                    <TitleContent>
                                        <div class="d-flex" style="display: flex; flex-flow: row; justify-content: space-between ; width:100%">
                                            <MudText>Tickets (@(CurrectSprintSteps.Where(x=>x.CompanyId == company.CompanyId && x.StepType == 1).Count()))</MudText>
                                            <MudToggleIconButton Toggled="@FullyExpandedType[company.CompanyId+"-Tickets"]" ToggledChanged="@(() => FullyExpandedType[company.CompanyId+"-Tickets"]=!FullyExpandedType[company.CompanyId+"-Tickets"])"
                                                             Icon="@Icons.Material.Filled.Fullscreen" Title="Off"
                                                             ToggledIcon="@Icons.Material.Filled.FullscreenExit" ToggledTitle="On" />
                                        </div>
                                    </TitleContent>
                                    @* Content van Tickets *@
                                    <ChildContent>
                                        <div class="row" style="min-height:12vh">
                                            @foreach (ScrumStatus status in Statusses)
                                            {
                                                var dropzone = status.ScrumStatusId + "_" + company.CompanyId+"_0";
                                                <div class="col-3" style="min-height:10vh;">
                                                    <MudPaper Elevation="0" Height="100%" Style="background-color:red" Class="pt-2 pl-2 pb-2 d-flex flex-column mud-background-gray rounded-lg">
                                                        <MudListSubheader>@status.ScrumStatusText</MudListSubheader>
@*                                                        @try{

                                                                }
                                                                catch
                                                                {
                                                                
                                                                }*@
                                                                @if (FullyExpandedType[company.CompanyId+"-Tickets"])
                                                        {

                                                            <MudDropZone T="Vision.Models.WorkflowStep" CanDrop="@((item)=>item.CompanyId==company.CompanyId && item.ProjectId == null)" Identifier="@dropzone" Class="mud-height-full" AllowReorder="true" />
                                                        }
                                                        else
                                                        {
                                                            <MudDropZone T="Vision.Models.WorkflowStep" CanDrop="@((item)=>item.CompanyId==company.CompanyId && item.ProjectId == null)" Identifier="@dropzone" Class="mud-height-full" Style="max-height:300px; overflow-y:scroll" AllowReorder="true" />

                                                        }
                                                    </MudPaper>
                                                </div>
                                            }
                                        </div>
                                    </ChildContent>
                                </MudExpansionPanel>
                            </MudExpansionPanels>
                            @*<MudExpansionPanels MultiExpansion="true">*@
                               @* <MudExpansionPanel IsInitiallyExpanded="@(FullyExpandedType[company.CompanyId + "-Tasks"])">
                                    <TitleContent>
                                        <div class="d-flex" style="display: flex; flex-flow: row; justify-content: space-between ; width:100%">
                                            <MudText>Tasks (@(CurrectSprintSteps.Where(x=>x.CompanyId == company.CompanyId && x.StepType == 0).Count()))</MudText>
                                            <MudToggleIconButton Toggled="@FullyExpandedType[company.CompanyId+"-Tasks"]" ToggledChanged="@(() => FullyExpandedType[company.CompanyId+"-Tasks"]=!FullyExpandedType[company.CompanyId+"-Tasks"])"
                                                             Icon="@Icons.Material.Filled.Fullscreen" Title="Off"
                                                             ToggledIcon="@Icons.Material.Filled.FullscreenExit" ToggledTitle="On" />
                                        </div>
                                    </TitleContent>
                                    @* Content van Tasks *@
                                   @* <ChildContent>*@
                                        <MudExpansionPanels MultiExpansion="true">
                                            @foreach (var project in Projects.Where(x => x != null))
                                            {
                                                if (project.CompanyId == company.CompanyId)
                                                {

                                                    if (!FullyExpandedProjects.ContainsKey(project.ProjectId))
                                                    {
                                                        FullyExpandedProjects.Add(project.ProjectId, false);
                                                    }
                                                    <MudExpansionPanel IsInitiallyExpanded="true">
                                                        <TitleContent>
                                                            <div class="d-flex" style="display: flex; flex-flow: row; justify-content: space-between ; width:100%">
                                                                <MudText>@project.ProjectName (@(CurrectSprintSteps.Where(x=>x.CompanyId == project.CompanyId && x.StepType == 0 && x.ProjectId == project.ProjectId).Count()))</MudText>
                                                                <MudToggleIconButton Toggled="@FullyExpandedProjects[project.ProjectId]" ToggledChanged="@(() => FullyExpandedProjects[project.ProjectId]=!FullyExpandedProjects[project.ProjectId])"
                                                                         Icon="@Icons.Material.Filled.Fullscreen" Title="Off"
                                                                         ToggledIcon="@Icons.Material.Filled.FullscreenExit" ToggledTitle="On" />
                                                            </div>
                                                        </TitleContent>
                                                        <ChildContent>
                                                            <div class="row" style="min-height:12vh">
                                                                @foreach (ScrumStatus status in Statusses)
                                                                {
                                                                    var dropzone = status.ScrumStatusId + "_" + company.CompanyId+"_" + project.ProjectId;
                                                                    <div class="col-3" style="min-height:10vh;">
                                                                        <MudPaper Elevation="0" Height="100%" Style="background-color:red" Class="pt-2 pl-2 pb-2 d-flex flex-column mud-background-gray rounded-lg">
                                                                            <MudListSubheader>@status.ScrumStatusText</MudListSubheader>
                                                                            @if (FullyExpandedProjects[project.ProjectId])
                                                                            {

                                                                                <MudDropZone T="Vision.Models.WorkflowStep" CanDrop="@((item)=>item.CompanyId==company.CompanyId && item.ProjectId == project.ProjectId)" Identifier="@dropzone" Class="mud-height-full" AllowReorder="true" />
                                                                            }
                                                                            else
                                                                            {
                                                                                <MudDropZone T="Vision.Models.WorkflowStep" CanDrop="@((item)=>item.CompanyId==company.CompanyId && item.ProjectId == project.ProjectId)" Identifier="@dropzone" Class="mud-height-full" Style="max-height:300px; overflow-y:scroll" AllowReorder="true" />

                                                                            }
                                                                        </MudPaper>
                                                                    </div>
                                                                }
                                                            </div>
                                                        </ChildContent>
                                                    </MudExpansionPanel>
                                                 }
                                            }
                                    @*   </MudExpansionPanels>
                                    </ChildContent>
                                </MudExpansionPanel>*@
                            </MudExpansionPanels>
                        </ChildContent>
                    </MudExpansionPanel>
                }
            </MudExpansionPanels>
        </ChildContent>
        <ItemRenderer>
            @{
                if (!IsEditCards.ContainsKey(context.WorkflowStepId))
                {
                    IsEditCards.Add(context.WorkflowStepId, false);
                }
            }
                <Vision.Components.PersonalTaskCard 
                @bind-Item="context" 
                @bind-IsEdit="IsEditCards[context.WorkflowStepId]" />

        </ItemRenderer>
    </MudDropContainer>
                </ChildContent>
            <ErrorContent Context="ex">
                @{
                    OnError(@ex);
                } 
                <p>@ex.Message</p>
            </ErrorContent>
        </ErrorBoundary>
</div>

<style>
    .myDiv {
        border-top-style: solid;
        border-top-color: blue;
        border: 2px outset;
        text-align: center;
        border-radius: 15px;
    }

    .mud-list-item-disabled {
    color: inherit !important;
    cursor: default !important;
}

</style>

<style>

    .ellipsis {
        text-overflow: ellipsis;
    }

    .onTileEditTextDiv, .field-container.assignedTo .onTileEditTextDiv span {
        border: 1px solid transparent;
    }

    .onTileEditTextDiv {
        height: 100%;
    }

    .tbTile {
        box-sizing: border-box;
        /* width: 185px; */
        margin: 5px 5px 10px 5px;
        /*border-left: 3px solid #f2cb1d;*/
        position: relative;
        font-size: 1.3rem;
        /*border-left-color: rgb(242, 203, 29);*/
    }

    .tbTileContent {
        font-size: 1.3rem;
        box-sizing: border-box;
        width: 100%;
        background-color: rgba(0, 0, 0, 0.25);
        border: solid;
        /* border-color: rgba(200, 200, 200, 1); */
        border-width: 1px 1px 1px 0;
        border-top-right-radius: inherit;
        border-color: rgb(96, 94, 92);
    }

    .tile-contents{
        display:grid;
        grid-template-areas:
        "type title title timer"
        "data data complete complete"
        "teammembers teammembers status status";
        grid-template-columns: 25px 1fr 1fr 25px;
        grid-template-rows: auto auto auto;
    }

    .id-title-container {
        font-size: 1.3rem;
        position: relative;
        margin: 4px 6px 6px 6px;
        overflow: hidden;
        line-height: 16px;
        padding: 2px;
        border: 1px solid transparent;
        min-height: 22px;
        max-height: none;
    }

    .data{
        grid-area:data;
    }

    .teammembers{
        grid-area:teammembers;
    }
    .status {
        grid-area:status;
    }
    .complete{
        grid-area:complete;
    }

    .work-item-type-icon-host {
        /* font-smoothing: antialiased; */
        /* font-weight: inherit; */
        /* color: inherit; */
        /* font-family: "Segoe UI VSS (Regular)","Segoe UI","-apple-system",BlinkMacSystemFont,Roboto,"Helvetica Neue",Helvetica,Ubuntu,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol"; */
        /* border-collapse: separate; */
        /* border-spacing: 0; */
        /* user-select: none; */
        font-size: 1.3rem;
        /* cursor: default; */
        line-height: 16px;
        /* box-sizing: border-box; */
        display: inline-block;
        grid-area:type;
    }

    .work-item-type-icon-wrapper {
        /* font-smoothing: antialiased; */
        /* font-weight: inherit; */
        /* color: inherit; */
        /* font-family: "Segoe UI VSS (Regular)","Segoe UI","-apple-system",BlinkMacSystemFont,Roboto,"Helvetica Neue",Helvetica,Ubuntu,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol"; */
        /* border-collapse: separate; */
        /* border-spacing: 0; */
        /* user-select: none; */
        font-size: 1.3rem;
        /* cursor: default; */
        line-height: 16px;
        /* box-sizing: border-box; */
        display: inline;
        margin-right: 5px;
    }

    .work-item-type-icon {
        /* border-collapse: separate; */
        /* border-spacing: 0; */
        /* user-select: none; */
        /* cursor: default; */
        /* box-sizing: border-box; */
        /* font-family: "Bowtie"; */
        font-size: 1rem;
        /* speak: none; */
        font-style: normal;
        font-weight: normal;
        font-variant: normal;
        text-transform: none;
        text-align: center;
        text-decoration: none;
        line-height: 16px;
        /* font-smoothing: antialiased; */
        min-width: 14px;
        display: inline;
        color: rgb(0, 156, 204);
    }

    .id {
        /* font-smoothing: antialiased; */
        /* color: inherit; */
        /* font-family: "Segoe UI VSS (Regular)","Segoe UI","-apple-system",BlinkMacSystemFont,Roboto,"Helvetica Neue",Helvetica,Ubuntu,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol"; */
        /* border-collapse: separate; */
        /* border-spacing: 0; */
        font-size: 1.3rem;
        /* cursor: default; */
        line-height: 16px;
        /* box-sizing: border-box; */
        user-select: text;
        display: inline;
        font-weight: bold;
        margin-right: 5px;
    }

    .title {
        --palette-neutral-100: 255, 255, 255;
        /* font-smoothing: antialiased; */
        /* font-weight: inherit; */
        /* border-collapse: separate; */
        /* border-spacing: 0; */
        /* user-select: none; */
        /* cursor: default; */
        /* box-sizing: border-box; */
        white-space: nowrap;
        display: inline;
        position: relative;
        color: rgba(var(--palette-neutral-100, 0, 0, 0), 1);
        overflow: hidden;
        /* font-family: "Segoe UI VSS (Regular)","Segoe UI","-apple-system",BlinkMacSystemFont,Roboto,"Helvetica Neue",Helvetica,Ubuntu,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol"; */
        font-size: 0.9rem;
        line-height: 16px;
        /* height: auto; */
        grid-area:title;
    }

    .timer{
        grid-area:time;
        position:relative;
        left:-20px;
    }

    .clickable-title-link {
        --palette-neutral-100: 255, 255, 255;
        /* font-smoothing: antialiased; */
        /* font-weight: inherit; */
        /* border-collapse: separate; */
        /* border-spacing: 0; */
        /* user-select: none; */
        white-space: nowrap;
        /* font-family: "Segoe UI VSS (Regular)","Segoe UI","-apple-system",BlinkMacSystemFont,Roboto,"Helvetica Neue",Helvetica,Ubuntu,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol"; */
        font-size: 0.9rem;
        line-height: 16px;
        /* box-sizing: border-box; */
        text-decoration: none;
        cursor: pointer;
        color: rgba(var(--palette-neutral-100, 0, 0, 0), 1);
    }

    .clickable-title {
        --palette-neutral-100: 255, 255, 255;
        /* font-smoothing: antialiased; */
        /* font-weight: inherit; */
        /* border-collapse: separate; */
        /* border-spacing: 0; */
        /* user-select: none; */
        /* font-family: "Segoe UI VSS (Regular)","Segoe UI","-apple-system",BlinkMacSystemFont,Roboto,"Helvetica Neue",Helvetica,Ubuntu,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol"; */
        font-size: 0.9rem;
        line-height: 16px;
        cursor: pointer;
        color: rgba(var(--palette-neutral-100, 0, 0, 0), 1);
        /* box-sizing: border-box; */
        word-wrap: break-word;
        white-space: pre-wrap;
        display: inline;
    }

    .card-container {
        margin-left: 7px;
        margin-right: 9px;
        margin-bottom: 9px;
        width: auto;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
    }

    .field-container {
        --palette-neutral-100: 255, 255, 255;
        /* font-smoothing: antialiased; */
        /* font-family: "Segoe UI VSS (Regular)", "Segoe UI", "-apple-system", BlinkMacSystemFont, Roboto, "Helvetica Neue", Helvetica, Ubuntu, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"; */
        /* border-collapse: separate; */
        /* border-spacing: 0; */
        /* user-select: none; */
        /* cursor: default; */
        /* box-sizing: border-box; */
        overflow: hidden;
        /* height: 28px; */
        font-size: 0.9rem;
        white-space: nowrap;
        color: rgba(var(--palette-neutral-100, 0, 0, 0), 1);
        /* float: right; */
        font-weight: bold;
        margin-left: 5px;
        margin-top: 8px;
        /* text-align: right; */
        line-height: 16px;
        /* background-color: red; */
    }

    .w-auto {
        width: auto;
    }

    .field-inner-element {
        --palette-neutral-100: 255, 255, 255;
        /* font-smoothing: antialiased; */
        /* font-family: "Segoe UI VSS (Regular)", "Segoe UI", "-apple-system", BlinkMacSystemFont, Roboto, "Helvetica Neue", Helvetica, Ubuntu, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"; */
        /* border-collapse: separate; */
        /* border-spacing: 0; */
        /* user-select: none; */
        /* cursor: default; */
        font-size: 0.9rem;
        color: rgba(var(--palette-neutral-100, 0, 0, 0), 1);
        font-weight: bold;
        /* text-align: right; */
        line-height: 16px;
        /* box-sizing: border-box; */
        overflow: hidden;
        white-space: nowrap;
        height: 100%;
        /* border: 1px solid transparent; */
        padding-left: 2px;
        padding-right: 2px;
    }

    .status-bar > .field-container:last-child > .field-inner-element {
        text-align: right;
        /* background-color: green; */
    }



    .user-picture-resolved {
        --palette-neutral-80: 225, 223, 221;
        /* font-smoothing: antialiased; */
        /* font-weight: inherit; */
        /* font-family: "Segoe UI VSS (Regular)", "Segoe UI", "-apple-system", BlinkMacSystemFont, Roboto, "Helvetica Neue", Helvetica, Ubuntu, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"; */
        /* border-collapse: separate; */
        /* border-spacing: 0; */
        /* user-select: none; */
        font-size: 1.3rem;
        color: rgba(var(--palette-neutral-80, 51, 51, 51), 1);
        white-space: nowrap;
        line-height: 24px;
        /* user-drag: none; */
        /* box-sizing: border-box; */
        float: left;
        /* cursor: default; */
        border-radius: 50%;
        height: 24px;
        width: 24px;
        background: none 0% 0% / 100% no-repeat;
    }

    .identity-picker-resolved-name {
        --palette-neutral-60: 161, 159, 157;
        /* font-smoothing: antialiased; */
        /* font-weight: inherit; */
        /* font-family: "Segoe UI VSS (Regular)", "Segoe UI", "-apple-system", BlinkMacSystemFont, Roboto, "Helvetica Neue", Helvetica, Ubuntu, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"; */
        /* border-collapse: separate; */
        /* border-spacing: 0; */
        /* user-select: none; */
        font-size: 1.3rem;
        line-height: 24px;
        /* box-sizing: border-box; */
        overflow: hidden;
        white-space: nowrap;
        word-wrap: normal;
        padding-left: 4px;
        padding-right: 4px;
        outline: none;
        display: block;
        /* cursor: default; */
        color: rgba(var(--palette-neutral-60, 102, 102, 102), 1);
    }

    .field-container2 {
        /* font-smoothing: antialiased; */
        /* font-weight: inherit; */
        /* color: inherit; */
        /* font-family: "Segoe UI VSS (Regular)", "Segoe UI", "-apple-system", BlinkMacSystemFont, Roboto, "Helvetica Neue", Helvetica, Ubuntu, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"; */
        /* border-collapse: separate; */
        /* border-spacing: 0; */
        /* user-select: none; */
        font-size: 1.3rem;
        /* box-sizing: border-box; */
        overflow: hidden;
        white-space: nowrap;
        height: 1.75em;
        margin-bottom: 7px;
        padding-top: 0;
        padding-left: 9px;
        padding-right: 9px;
        padding-bottom: 0;
        /* cursor: default; */
    }

    .field-label2 {
        --palette-neutral-100: 255, 255, 255;
        --text-secondary-color: rgba(var(--palette-neutral-100), .80);
        /* font-smoothing: antialiased; */
        /* font-family: "Segoe UI VSS (Regular)", "Segoe UI", "-apple-system", BlinkMacSystemFont, Roboto, "Helvetica Neue", Helvetica, Ubuntu, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"; */
        /* border-collapse: separate; */
        /* border-spacing: 0; */
        /* user-select: none; */
        font-size: 1.3rem;
        /* cursor: default; */
        box-sizing: border-box;
        overflow: hidden;
        /* vertical-align: middle; */
        white-space: nowrap;
        height: 100%;
        border: solid 1px transparent;
        line-height: 14px;
        float: left;
        font-weight: normal;
        display: block;
        margin-right: 7px;
        color: var(--text-secondary-color, rgba(0, 0, 0, .55));
        width: 35%;
    }

    .field-inner-element2 {
        --palette-neutral-80: 225, 223, 221;
        /* font-smoothing: antialiased; */
        /* font-weight: inherit; */
        /* font-family: "Segoe UI VSS (Regular)", "Segoe UI", "-apple-system", BlinkMacSystemFont, Roboto, "Helvetica Neue", Helvetica, Ubuntu, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"; */
        /* border-collapse: separate; */
        /* border-spacing: 0; */
        /* user-select: none; */
        font-size: 1.3rem;
        /* cursor: default; */
        box-sizing: border-box;
        overflow: hidden;
        /* vertical-align: middle; */
        white-space: nowrap;
        height: 100%;
        border: solid 1px transparent;
        line-height: 14px;
        display: block;
        padding-left: 2px;
        padding-right: 2px;
        color: rgba(var(--palette-neutral-80, 51, 51, 51), 1);
        width: calc(65% - 8px);
    }

    .workitem-state-color-cell2 {
        --palette-neutral-80: 225, 223, 221;
        /* font-smoothing: antialiased; */
        /* font-weight: inherit; */
        /* font-family: "Segoe UI VSS (Regular)", "Segoe UI", "-apple-system", BlinkMacSystemFont, Roboto, "Helvetica Neue", Helvetica, Ubuntu, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"; */
        /* border-collapse: separate; */
        /* border-spacing: 0; */
        /* user-select: none; */
        font-size: 1.3rem;
        /* cursor: default; */
        white-space: nowrap;
        line-height: 14px;
        color: rgba(var(--palette-neutral-80, 51, 51, 51), 1);
        /* box-sizing: border-box; */
        height: 100%;
        /* border: 1px solid transparent; */
    }

    .workitem-state-circle2 {
        --palette-neutral-80: 225, 223, 221;
        /* font-smoothing: antialiased; */
        /* font-weight: inherit; */
        /* font-family: "Segoe UI VSS (Regular)", "Segoe UI", "-apple-system", BlinkMacSystemFont, Roboto, "Helvetica Neue", Helvetica, Ubuntu, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"; */
        /* border-collapse: separate; */
        /* border-spacing: 0; */
        /* user-select: none; */
        font-size: 1.3rem;
        /* cursor: default; */
        white-space: nowrap;
        line-height: 14px;
        color: rgba(var(--palette-neutral-80, 51, 51, 51), 1);
        box-sizing: border-box;
        /* border: 1px solid transparent; */
        border-radius: 50%;
        border-width: 1px;
        border-style: solid;
        margin-top: 5px;
        margin-right: 5px;
        float: left;
        width: 8px !important;
        height: 8px !important;
        transition: background-color linear .2s;
        background-color: rgb(178, 178, 178);
        border-color: rgb(178, 178, 178);
    }

    .workitem-state-value2 {
        --palette-neutral-80: 225, 223, 221;
        /* font-smoothing: antialiased; */
        /* font-weight: inherit; */
        /* font-family: "Segoe UI VSS (Regular)", "Segoe UI", "-apple-system", BlinkMacSystemFont, Roboto, "Helvetica Neue", Helvetica, Ubuntu, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"; */
        /* border-collapse: separate; */
        /* border-spacing: 0; */
        /* user-select: none; */
        font-size: 1.3rem;
        /* cursor: default; */
        white-space: nowrap;
        line-height: 14px;
        color: rgba(var(--palette-neutral-80, 51, 51, 51), 1);
        /* box-sizing: border-box; */
        height: 100%;
        /* border: 1px solid transparent; */
        overflow: hidden;
        display: inline-block;
        /* width: calc(100% - 13px); */
    }

    .card-context-menu {
        /* font-smoothing: antialiased; */
        /* font-weight: inherit; */
        /* color: inherit; */
        /* font-family: "Segoe UI VSS (Regular)", "Segoe UI", "-apple-system", BlinkMacSystemFont, Roboto, "Helvetica Neue", Helvetica, Ubuntu, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"; */
        /* border-collapse: separate; */
        /* border-spacing: 0; */
        /* user-select: none; */
        font-size: 1.3rem;
        /* box-sizing: border-box; */
        width: 25px;
        height: 25px;
        position: absolute;
        /* border: 1px solid transparent; */
        top: 3px;
        right: 3px;
        padding: 4px 0 0 5px;
        display: block;
        z-index: 1000;
        cursor: pointer;
    }

    .bowtie-icon {
        /* color: inherit; */
        /* border-collapse: separate; */
        /* border-spacing: 0; */
        /* user-select: none; */
        cursor: pointer;
        /* box-sizing: border-box; */
        /* font-family: "Bowtie"; */
        font-size: 1rem;
        /* speak: none; */
        font-style: normal;
        font-weight: normal;
        font-variant: normal;
        text-transform: none;
        text-align: center;
        text-decoration: none;
        line-height: 16px;
        /* -webkit-font-smoothing: antialiased; */
        display: none;
    }

    .tbTile:hover .card-context-menu .icon-ellipsis,
    .tbTile:hover .card-context-menu .bowtie-ellipsis {
        display: inline-block;
    }
</style>