<link href="..\css\open-iconic\font\css\open-iconic-bootstrap.min.css" rel="stylesheet">
<div class="tbTile ui-draggable ui-draggable-handle childTbTile">
    <div class="tbTileContent d-flex flex-row">
            <MudProgressLinear Vertical="true"
                           Color="(Item.StepType == 0)?Color.Tertiary:Color.Info"
                           Size="Size.Small"
                           Value="@Item.PercentComplete"
                           Min="0"
                           Max="100"
                           Style="height: auto;" />
        
        <div class="tile-contents" style="width:99%">
            @*<div class="id-title-container">*@
                <span class="work-item-type-icon-host">
                    <div class="work-item-type-icon-wrapper">
                        @if (Item.StepType == 0)
                        {
                           <svg class="mud-icon-root mud-svg-icon mud-icon-size-medium" focusable="false" viewBox="0 0 24 24" aria-hidden="true"><!--!--><rect fill="none" height="24" width="24"></rect>
                               <path color="orange" d="M22,5.18L10.59,16.6l-4.24-4.24l1.41-1.41l2.83,2.83l10-10L22,5.18z M19.79,10.22C19.92,10.79,20,11.39,20,12 c0,4.42-3.58,8-8,8s-8-3.58-8-8c0-4.42,3.58-8,8-8c1.58,0,3.04,0.46,4.28,1.25l1.44-1.44C16.1,2.67,14.13,2,12,2C6.48,2,2,6.48,2,12 c0,5.52,4.48,10,10,10s10-4.48,10-10c0-1.19-0.22-2.33-0.6-3.39L19.79,10.22z"></path>
                           </svg>
                        }
                        else if (Item.StepType == 1)
                        {
                            <svg class="mud-icon-root mud-svg-icon mud-icon-size-medium" focusable="false" viewBox="0 0 24 24" aria-hidden="true"><!--!--><g><rect fill="none" height="24" width="24"></rect></g>
                                <g><path color="red" d="M14.5,2.5c0,1.5-1.5,6-1.5,6h-2c0,0-1.5-4.5-1.5-6C9.5,1.12,10.62,0,12,0S14.5,1.12,14.5,2.5z M12,10c-1.1,0-2,0.9-2,2 s0.9,2,2,2s2-0.9,2-2S13.1,10,12,10z M16.08,5.11c0.18-0.75,0.33-1.47,0.39-2.06C19.75,4.69,22,8.08,22,12c0,5.52-4.48,10-10,10 S2,17.52,2,12c0-3.92,2.25-7.31,5.53-8.95C7.6,3.64,7.74,4.37,7.92,5.11C5.58,6.51,4,9.07,4,12c0,4.42,3.58,8,8,8s8-3.58,8-8 C20,9.07,18.42,6.51,16.08,5.11z M18,12c0,3.31-2.69,6-6,6s-6-2.69-6-6c0-2,0.98-3.77,2.48-4.86c0.23,0.81,0.65,2.07,0.65,2.07 C8.43,9.93,8,10.92,8,12c0,2.21,1.79,4,4,4s4-1.79,4-4c0-1.08-0.43-2.07-1.13-2.79c0,0,0.41-1.22,0.65-2.07C17.02,8.23,18,10,18,12 z"></path></g>
                            </svg>
                            
                        }
                        else
                        {
                               <span class="oi oi-list" aria-hidden="false"></span>
                        }
                    </div>
                </span>
                <div class="title ellipsis">
                    <MudButton DisableRipple OnClick="() => OpenAutotask()">   <span class="clickable-title">@Item.Title</span></MudButton>
               </div> 
                <div class="timer">
                     <MudToggleIconButton Size="Size.Medium" Icon="@Icons.Material.TwoTone.AlarmAdd" Edge="@Edge.End" Title="Off" Toggled="TimerActive"
                     ToggledIcon="@Icons.Material.TwoTone.AlarmAdd" ToggledSize="Size.Medium" ToggledColor="@Color.Warning" ToggledTitle="On"  ToggledChanged="ActiveBillingCode"/>
                </div>
                @*</div>*@
            <div class="card-container row data">
                <div class="col-10">
                        <div class="title">
                            <p><i>@Item.Company.CompanyName</i></p>
                            <p><i>@Item.ChangedDateTime?.ToShortDateString()</i></p>
                            @*@if (Item.StepType == 0)
                            {
                                <p><i>@(Item.AssignedRole.Name ?? "&nbsp;")</i></p>
                            }
                            else if (Item.StepType == 1)
                            {
                                <p><i>@(Item.Queue?.QueueName ??"Geen queue")</i></p>
                            }*@
                        </div>
                </div>
            </div>
            @*@if (Item.StepType == 1)
            {
            <div class="field-container onTileEditDiv non-combo-behavior ellipsis  effort witRemainingWork">
            <div class="field-inner-element ellipsis onTileEditTextDiv">
            <span>DueDate @Item.EndDate</span>
            </div>
            </div>

            }*@
               <div class="teammembers">
                   <div class="field-inner-element ellipsis onTileEditTextDiv" style="display:flex ; flex-direction:row">
                           
  @*                           @{string fullName = Item.AssignedTeamMember.FirstName + " " + Item.AssignedTeamMember.LastName;
                        <MudTooltip Text="@(fullName)">
                            <ChildContent>
                                <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="@TogglePrimairyOpen">
                                        @if (Item.AssignedTeamMemberId == null)
                                        {
                                            <MudAvatar Size="Size.Medium" Color="Color.Transparent"><span>1<sup>st</sup></span></MudAvatar>
                                        }
                                        else
                                        {
                                            <MudAvatar Size="Size.Medium" Color="Color.Primary" Style="margin-right:10px;">@Item.AssignedTeamMember.GetInitials()</MudAvatar>
                                        }
                                </MudButton>
                            </ChildContent>
                            <TooltipContent>
                                @((MarkupString)fullName)
                            </TooltipContent>
                        </MudTooltip>    
                        <MudPopover Open="@_isPrimairyOpen" AnchorOrigin="Origin.BottomLeft">
                            <MudSelect Value="@GetPrimaryValue()" ValueChanged="PrimaryValueChanged" Clearable T="long?" Label="Primary Resource">
                            @foreach (var item in GetTeamMemberRoles())
                            {
                                <MudSelectItem T="long?" Value="@item.TeamMemberRoleId">@item.TeamMember.FirstName @item.TeamMember.LastName (@item.Role.Name)</MudSelectItem>

                            }
                            </MudSelect>
                        </MudPopover>
                        }

                        @{ var fullNames = String.Join("<br/>", Item.WorkflowStep2TeamMember.Select(x => x.TeamMember.GetFullName()));
                        <MudTooltip>
                            <ChildContent>
                                <MudButton Variant="Variant.Text" Color="Color.Primary" OnClick="@ToggleSecondairyOpen" Style="justify-content:start">
                                    <MudAvatarGroup MaxSize="Size.Medium" Max="4" Spacing="7" MaxColor="Color.Primary"> 
                                        @if (Item.WorkflowStep2TeamMember.Any())
                                        {
                                            @foreach (var item in Item.WorkflowStep2TeamMember)
                                            {
                                                <MudAvatar Size="Size.Medium" Color="Color.Secondary"><span>@item.TeamMember.GetInitials()</span></MudAvatar>
                                            }
                                        }
                                        else
                                        {
                                            <MudAvatar Size="Size.Medium" Color="Color.Transparent"><span>2<sup>nd</sup></span></MudAvatar>
                                        }
                                    </MudAvatarGroup>
                                </MudButton>
                            </ChildContent>
                            <TooltipContent>
                                @((MarkupString)fullNames)
                            </TooltipContent>
                        </MudTooltip>
                        <MudPopover Open="@_isSecondairyOpen" AnchorOrigin="Origin.BottomLeft">
                            <MudSelect SelectedValues="@GetSecondaryValues()" SelectedValuesChanged="SecondaryValuesChanged" MultiSelection="true" Clearable T="long?" Label="Secondary Resources">
                            @foreach (var item in GetTeamMemberRoles())
                            {
                                if (GetSecondaryValuesItems().Any(x => (x.TeamMemberId == item.TeamMemberId && x.RoleId != item.RoleId) || (int?)item.TeamMemberId == Item.AssignedTeamMemberId))
                                {
                                    <MudSelectItem Disabled="true" T="long?" Value="@item.TeamMemberRoleId">
                                               
                                        @item.TeamMember.FirstName @item.TeamMember.LastName
                                        (@item.Role.Name)
                                    </MudSelectItem>

                                }
                                else
                                {
                                    <MudSelectItem T="long?" Value="@item.TeamMemberRoleId">
                                               
                                        @item.TeamMember.FirstName @item.TeamMember.LastName
                                        (@item.Role.Name)
                                    </MudSelectItem>
                                }
                            }
                            </MudSelect>
                        </MudPopover>
                        }*@
                       
                          @if (Item.AssignedTeamMemberId == null)
                                        {
                                            <MudAvatar Size="Size.Medium" Color="Color.Transparent"><span>1<sup>st</sup></span></MudAvatar>
                                        }
                                        else
                                        {
                                            <MudAvatar Size="Size.Medium" Color="Color.Primary" Style="margin-right:10px;">@Item.AssignedTeamMember.GetInitials()</MudAvatar>
                                        }
                        <MudAvatarGroup MaxSize="Size.Medium" Max="4" Spacing="7" MaxColor="Color.Primary"> 
                                        @if (Item.WorkflowStep2TeamMember.Any())
                                        {
                                            @foreach (var item in Item.WorkflowStep2TeamMember)
                                            {
                                                <MudAvatar Size="Size.Medium" Color="Color.Secondary"><span>@item.TeamMember.GetInitials()</span></MudAvatar>
                                            }
                                        }
                                        else
                                        {
                                            <MudAvatar Size="Size.Medium" Color="Color.Transparent"><span>2<sup>nd</sup></span></MudAvatar>
                                        }
                                    </MudAvatarGroup> 
                                    </div>
                </div>
                <div class="complete">
                    @*<MudSlider Min="0" Max="100" T="int" @bind-Value="Item.PercentComplete" Step="5" Size="Size.Medium" ValueLabel="true" />*@
                </div>
                <div class="status">
                    
                    <MudSelect T="int" @bind-Value="Item.AutotaskStatusId" Label="Status" AnchorOrigin="Origin.BottomCenter" SelectedValuesChanged="ChangeValue">
                        @foreach (var item2 in contextProvider.AutoTaskStatuses.Where(x => x.ScrumStatusId == Item.AutotaskStatus.ScrumStatusId))
                        {
                            <MudSelectItem Value="@item2.AutoTaskStatusId">
                                <span>@item2.AutoTaskStatusText</span>
                            </MudSelectItem>
                        }
                    </MudSelect>
                </div>
        </div>
    </div>
</div>

<style>
    .tbTile .editTeamMembers {
        display: none;
    }

    .tbTile:hover .editTeamMembers {
        display: block;
    }
</style>